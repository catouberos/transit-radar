package server

import (
	"context"

	"connectrpc.com/connect"

	apiv1 "github.com/catouberos/transit-radar/gen/api/v1" // generated by protoc-gen-go
	"github.com/catouberos/transit-radar/internal/models"
)

func (s *RPCServer) ListVariant(
	ctx context.Context,
	req *connect.Request[apiv1.ListVariantRequest],
) (*connect.Response[apiv1.ListVariantResponse], error) {
	results, err := s.App.ListVariant(ctx)
	if err != nil {
		return nil, err
	}

	routes := []*apiv1.Variant{}

	for _, result := range results {
		routes = append(routes, toResponseVariant(result))
	}

	res := connect.NewResponse(&apiv1.ListVariantResponse{Variants: routes})
	return res, nil
}

func (s *RPCServer) GetVariant(
	ctx context.Context,
	req *connect.Request[apiv1.GetVariantRequest],
) (*connect.Response[apiv1.GetVariantResponse], error) {
	variant, err := s.App.GetVariant(ctx, req.Msg.Id)
	if err != nil {
		return nil, err
	}

	res := connect.NewResponse(&apiv1.GetVariantResponse{Variant: toResponseVariant(variant)})
	return res, nil
}

func toResponseVariant(in models.Variant) *apiv1.Variant {
	return &apiv1.Variant{
		Id:            in.ID,
		Name:          in.Name,
		IsOutbound:    in.IsOutbound,
		RouteId:       in.RouteID,
		Description:   in.Description.String,
		ShortName:     in.ShortName.String,
		Distance:      in.Distance.Float32,
		Duration:      in.Duration.Int32,
		StartStopName: in.StartStopName.String,
		EndStopName:   in.EndStopName.String,
	}
}
