package server

import (
	"context"

	"connectrpc.com/connect"

	apiv1 "github.com/catouberos/transit-radar/gen/api/v1" // generated by protoc-gen-go
	"github.com/catouberos/transit-radar/internal/models"
)

func (s *RPCServer) ListRoute(
	ctx context.Context,
	req *connect.Request[apiv1.ListRouteRequest],
) (*connect.Response[apiv1.ListRouteResponse], error) {
	results, err := s.App.ListRoute(ctx)
	if err != nil {
		return nil, err
	}

	routes := []*apiv1.Route{}

	for _, result := range results {
		routes = append(routes, toResponseRoute(result))
	}

	res := connect.NewResponse(&apiv1.ListRouteResponse{Routes: routes})
	return res, nil
}

func (s *RPCServer) GetRoute(
	ctx context.Context,
	req *connect.Request[apiv1.GetRouteRequest],
) (*connect.Response[apiv1.GetRouteResponse], error) {
	result, err := s.App.GetRoute(ctx, req.Msg.Id)
	if err != nil {
		return nil, err
	}

	res := connect.NewResponse(&apiv1.GetRouteResponse{Route: toResponseRoute(result)})
	return res, nil
}

func toResponseRoute(in models.Route) *apiv1.Route {
	return &apiv1.Route{
		Id:            in.ID,
		Number:        in.Number,
		Name:          in.Name,
		Active:        in.Active,
		OperationTime: in.OperationTime.String,
		Organization:  in.Organization.String,
		Ticketing:     in.Ticketing.String,
		RouteType:     in.RouteType.String,
		EbmsId:        in.EbmsID.Int64,
	}
}
